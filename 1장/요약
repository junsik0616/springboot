# 📌 1장 정리 - 스프링 부트 기본 개념

## 🌱 스프링 부트란?
스프링 부트(Spring Boot)는 **자바의 웹 프레임워크**로, 웹 프로그램을 빠르게 만들 수 있도록 도와준다.  
스프링 프레임워크에 **내장 웹 서버(톰캣 등)를 포함**하고, 여러 기능을 추가하여 더 쉽게 사용할 수 있도록 만든 것이다.  

✅ **웹 프레임워크를 사용하면 다음과 같은 기능을 간단하게 구현할 수 있다.**  
- 쿠키 & 세션 처리  
- 로그인 / 로그아웃 처리  
- 권한 관리  

---

## 🖥️ 클라이언트 & 서버 개념
### ✅ 클라이언트(Client)
- 크롬, 익스플로러(Edge)와 같은 **웹 브라우저**를 의미한다.  
- 브라우저는 **서버의 주소(URL)를 입력하여 요청(Request)을 보냄**.  

### ✅ 서버(Server)
- 브라우저에서 요청한 정보를 처리하는 **원격 컴퓨터**.  
- 서버는 **웹 서비스뿐만 아니라, FTP, 이메일 등 다양한 서비스도 운영 가능**.  
- 예를 들어, `naver.com`을 입력하면 네이버 서버가 호출되어 응답을 반환(Response).  

### ✅ 서버의 포트(Port)
- 포트는 **네트워크 서비스를 구분하는 번호**.  
- 같은 IP를 사용하더라도, 포트를 다르게 하면 여러 개의 서비스를 운영 가능!  

| 프로토콜  | 서비스 내용 | 포트 번호 |
|----------|------------|---------|
| **HTTP**  | 웹 서비스 | 80 |
| **HTTPS** | SSL을 이용한 웹 서비스 | 443 |
| **FTP**   | 파일 전송 서비스 | 21 |
| **SSH/SFTP** | 보안이 강화된 원격 접속 | 22 |
| **TELNET** | 원격 서버 접속 | 23 |
| **SMTP**  | 메일 전송 | 25 |

---

## 🌍 HTTP 요청 예제 (`http://localhost:8080/hello`)
| 요소 | 설명 |
|------|------|
| **localhost** | 내 컴퓨터를 의미하는 도메인 (`127.0.0.1`과 동일) |
| **8080** | 스프링 부트의 내장 웹 서버(Tomcat)의 기본 포트 |
| **/hello** | 요청을 처리하는 특정 엔드포인트(컨트롤러) |

---

## 🎯 컨트롤러(Controller)란?
**컨트롤러는 클라이언트(브라우저)의 요청을 처리하는 자바 클래스**  
- `@Controller` 애너테이션이 있어야 **스프링 부트가 컨트롤러로 인식**함.  
- `@GetMapping("/hello")`를 사용하면, **"/hello" URL 요청이 들어왔을 때 특정 메서드를 실행**하도록 매핑 가능.  
- `@ResponseBody`를 사용하면, **메서드의 반환값을 그대로 응답(Response)으로 출력**.  

### ✅ **예제 코드**
```java
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class HelloController {

    @GetMapping("/hello")
    @ResponseBody
    public String hello() {
        return "Hello, Spring Boot!";
    }
}
